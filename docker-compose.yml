version: '3'

services:
  db:
    image: postgres:${POSTGRES_TAG:-12-alpine}
    environment:
      - POSTGRES_DB=photic
      - POSTGRES_USER=photic
      - POSTGRES_PASSWORD=photic
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    networks:
      - photic
    restart: unless-stopped

  web:
    build:
      context: .
      args:
        HTTP_PROXY: '${HTTP_PROXY}'
        HTTPS_PROXY: '${HTTPS_PROXY}'
    #command: python manage.py runserver 0.0.0.0:8000
    command: gunicorn --bind 0.0.0.0:8000 --workers 2 -k uvicorn.workers.UvicornWorker photic.asgi:application
    volumes:
      - .:/code
      - ${ROI_PATH}:/rois
    depends_on:
      - db
    networks:
      - photic
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    environment:
      - NGINX_HOST=${HOST}
      - NGINX_HTTP_PORT=${HTTP_PORT}
      - NGINX_HTTPS_PORT=${HTTPS_PORT}
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./static:/code/static
      - ${ROI_PATH}:/rois
      - ${SSL_KEY}:/ssl/ssl.key:ro
      - ${SSL_CERT}:/ssl/ssl.cer:ro
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
      - ${HTTPS_PORT}:${HTTPS_PORT}
    depends_on:
      - web
    networks:
      - photic
    restart: unless-stopped

volumes:
  postgres_data:

networks:
    photic:
      name: ${DOCKER_NETWORK}
      driver: bridge
